syntax = "proto3";
option java_multiple_files = true;
option java_package = "ServiceGRPC";
option java_outer_classname = "BChainProto";
option objc_class_prefix = "HLW";


service P2PService {
    rpc ping(Ping) returns (Ping){}
    rpc findNode(Ping) returns (stream KBucket) {}
    rpc findValue(Ping) returns (stream Found) {}
    rpc store(Data) returns (Empty) {}
    rpc broadcast(BlockData) returns (Empty){}
    rpc askMessage(Empty) returns (Message){}
    rpc getWallet(Ping) returns (Wallet){}
}
//provavelmente v√£o mudar os atributos de cada tipo, passar por exemplo para bytes
message Empty{
}

message Ping{
    string nodeId = 1;
    string ip=2;
    int32 port=3;
}

message KBucket{
    string nodeId = 1;
    string ip = 2;
    int32 port = 3;
}
message Found{
    bool found =1;
    bytes Value = 2;
    KBucket kBucket =3;
}
message Data{
    string key = 1;
    bytes value = 2;
    Ping ping = 3;
}
enum DataType{
    TRANSACTION = 0;
    BLOCK = 1;
    BLOCKCHAIN = 2;
    AUCTION = 3;
    Pool =4;
}
message MDataType{
    DataType datatype=1;
}
message BlockData{
    bytes data = 1;
    DataType datatype =2;
    string identifier =3;
    Ping ping = 4;
}
message Message{
    bytes blockchain = 1;
    bytes pool = 2;
    bytes service = 3;
}
message Wallet{
    bytes wallet = 1;
    Ping ping =2;
}
